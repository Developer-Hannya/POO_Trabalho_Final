/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfacesGraficas;

import listaPokemons.*;
import main.Jogador;
import main.Pokemon;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.util.Random;

/**
 *
 * @author ice
 */
public class Selecao extends javax.swing.JFrame {

    /**
     * Construtor da janela de Seleção
     */
    public Selecao() {
        initComponents();
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonAleatorio = new javax.swing.JButton();
        ButtonSquirtle = new javax.swing.JButton();
        ButtonSandshrew = new javax.swing.JButton();
        ButtonCharmander = new javax.swing.JButton();
        ButtonPikachu = new javax.swing.JButton();
        ButtonBulbassauro = new javax.swing.JButton();
        ButtonMewtwo = new javax.swing.JButton();
        ButtonJolteon = new javax.swing.JButton();
        ButtonFlareon = new javax.swing.JButton();
        ButtonEeve = new javax.swing.JButton();
        ButtonLeafeon = new javax.swing.JButton();
        ButtonVaporeon = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1268, 502));
        setPreferredSize(new java.awt.Dimension(1268, 502));
        setResizable(false);
        setSize(new java.awt.Dimension(1268, 502));
        getContentPane().setLayout(null);

        ButtonAleatorio.setText("Aleatório");
        ButtonAleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAleatorioActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonAleatorio);
        ButtonAleatorio.setBounds(1100, 450, 150, 23);

        ButtonSquirtle.setText("Squirtle");
        ButtonSquirtle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSquirtleActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonSquirtle);
        ButtonSquirtle.setBounds(250, 450, 150, 23);

        ButtonSandshrew.setText("Sandshrew");
        ButtonSandshrew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSandshrewActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonSandshrew);
        ButtonSandshrew.setBounds(690, 230, 150, 23);

        ButtonCharmander.setText("Charmander");
        ButtonCharmander.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCharmanderActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonCharmander);
        ButtonCharmander.setBounds(700, 450, 150, 23);

        ButtonPikachu.setText("Pikachu");
        ButtonPikachu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPikachuActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonPikachu);
        ButtonPikachu.setBounds(480, 230, 150, 23);

        ButtonBulbassauro.setText("Bulbassauro");
        ButtonBulbassauro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBulbassauroActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonBulbassauro);
        ButtonBulbassauro.setBounds(240, 230, 150, 23);

        ButtonMewtwo.setText("Mewtwo");
        ButtonMewtwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMewtwoActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonMewtwo);
        ButtonMewtwo.setBounds(1090, 230, 150, 23);

        ButtonJolteon.setText("Jolteon");
        ButtonJolteon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonJolteonActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonJolteon);
        ButtonJolteon.setBounds(30, 230, 150, 23);

        ButtonFlareon.setText("Flareon");
        ButtonFlareon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonFlareonActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonFlareon);
        ButtonFlareon.setBounds(30, 450, 150, 23);

        ButtonEeve.setText("Eeve");
        ButtonEeve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEeveActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonEeve);
        ButtonEeve.setBounds(480, 450, 150, 23);

        ButtonLeafeon.setText("Leafeon");
        ButtonLeafeon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLeafeonActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonLeafeon);
        ButtonLeafeon.setBounds(900, 450, 150, 23);

        ButtonVaporeon.setText("Vaporeon");
        ButtonVaporeon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonVaporeonActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonVaporeon);
        ButtonVaporeon.setBounds(890, 230, 150, 23);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImagensDeFundo/Poke-Select-2.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1290, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Esse método cria um Pikachu e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonPikachuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPikachuActionPerformed
        // TODO add your handling code here:
        Pikachu p1;        
        p1 = new Pikachu();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        criaBatalha(j);
    }//GEN-LAST:event_ButtonPikachuActionPerformed

    /**
     * Esse método cria um Bulbassauro ao clicar no botão abaixo da imagem do Pokemon
     */
    private void ButtonBulbassauroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBulbassauroActionPerformed
        // TODO add your handling code here:
        Bulbassauro p1;
        p1 = new Bulbassauro();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        criaBatalha(j);
    }//GEN-LAST:event_ButtonBulbassauroActionPerformed

    /**
     * Esse método cria um Sandshrew e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonSandshrewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSandshrewActionPerformed
        // TODO add your handling code here:
        Sandshrew p1;
        p1 = new Sandshrew();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        criaBatalha(j);
    }//GEN-LAST:event_ButtonSandshrewActionPerformed

    /**
     * Esse método cria um Squirtle e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonSquirtleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSquirtleActionPerformed
        // TODO add your handling code here:
        Squirtle p1;
        p1 = new Squirtle();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        criaBatalha(j);
    }//GEN-LAST:event_ButtonSquirtleActionPerformed

    /**
     * Esse método cria um Charmander e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonCharmanderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCharmanderActionPerformed
        // TODO add your handling code here:
        Charmander p1;
        p1 = new Charmander();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        criaBatalha(j);
    }//GEN-LAST:event_ButtonCharmanderActionPerformed
    
    /**
     * Esse método salva o Jogador para que ele possa ser lido na Batalha.
     */
    private void salvarJogador(Jogador j) {
        try{
        FileOutputStream fos = new FileOutputStream("Jogador.ser");
        ObjectOutputStream oos = new ObjectOutputStream(fos);
        oos.writeObject(j);
        oos.flush();       
        } catch(Exception ex){
            
        }
        
    }
    
    /**
     * Esse método cria uma janela de batalha, deixa ela visível e fecha a janela de seleção.
     */
    private void criaBatalha(Jogador j) {
        salvarJogador(j);
        Batalha batalha;
        batalha = new Batalha();
        batalha.setVisible(true);
        this.dispose();
    }
    /**
     * Esse método gera um pokemon aleatorio e atribui ao jogador, ao final chama o método de criar a janela de batalha.
     */
    private void ButtonAleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAleatorioActionPerformed
        // TODO add your handling code here:
        Random r;
        r = new Random();
        int i; 
        i = r.nextInt(11)+1;
        Pokemon p1 = new Pokemon() {};
        Jogador j = new Jogador();        
        switch(i) {
            case 1:               
               p1 = new Squirtle(); 
               break;
            case 2:
                p1 = new Charmander(); 
                break;
            case 3:
                p1 = new Sandshrew(); 
                break;
            case 4:
                p1 = new Pikachu();
                break;
            case 5:
               p1 = new Bulbassauro(); 
               break;
            case 6:
               p1 = new Eeve(); 
               break;
            case 7:
               p1 = new Jolteon(); 
               break;
            case 8:
               p1 = new Flareon();               
               break;
            case 9:
               p1 = new Leafeon(); 
               break;
            case 10:
               p1 = new Vaporeon(); 
               break;
            case 11:
               p1 = new Mewtwo(); 
               break;  
        }
        j.setPokemon(p1);
        criaBatalha(j);
    }//GEN-LAST:event_ButtonAleatorioActionPerformed

    /**
     * Esse método cria um Jolteon e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonJolteonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonJolteonActionPerformed
        // TODO add your handling code here:
        Jolteon p1;
        p1 = new Jolteon();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        System.out.println(j.getPokemon().getNome());
        criaBatalha(j);
    }//GEN-LAST:event_ButtonJolteonActionPerformed

    /**
     * Esse método cria um Flareon e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonFlareonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonFlareonActionPerformed
        Flareon p1;
        p1 = new Flareon();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        System.out.println(j.getPokemon().getNome());
        criaBatalha(j);        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonFlareonActionPerformed

    /**
     * Esse método cria um Vaporeon e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonVaporeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonVaporeonActionPerformed
        // TODO add your handling code here:
        Vaporeon p1;
        p1 = new Vaporeon();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        System.out.println(j.getPokemon().getNome());
        criaBatalha(j);
    }//GEN-LAST:event_ButtonVaporeonActionPerformed

    /**
     * Esse método cria um Leafeon e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonLeafeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLeafeonActionPerformed
        // TODO add your handling code here:
        Leafeon p1;
        p1 = new Leafeon();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        System.out.println(j.getPokemon().getNome());
        criaBatalha(j);
    }//GEN-LAST:event_ButtonLeafeonActionPerformed

    /**
     * Esse método cria um Mewtwo e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonMewtwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMewtwoActionPerformed
        // TODO add your handling code here:
        Mewtwo p1;
        p1 = new Mewtwo();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        System.out.println(j.getPokemon().getNome());
        criaBatalha(j);
    }//GEN-LAST:event_ButtonMewtwoActionPerformed

    /**
     * Esse método cria um Eeve e o atribui ao jogador depois de clicar no botão abaixo da imagem do Pokemon. Ao final chama o método de criar a janela de batalha.
     */
    private void ButtonEeveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEeveActionPerformed
        // TODO add your handling code here:
        Eeve p1;
        p1 = new Eeve();
        Jogador j = new Jogador();
        j.setPokemon(p1);
        System.out.println(j.getPokemon().getNome());
        criaBatalha(j);
    }//GEN-LAST:event_ButtonEeveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Selecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Selecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Selecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Selecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Selecao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAleatorio;
    private javax.swing.JButton ButtonBulbassauro;
    private javax.swing.JButton ButtonCharmander;
    private javax.swing.JButton ButtonEeve;
    private javax.swing.JButton ButtonFlareon;
    private javax.swing.JButton ButtonJolteon;
    private javax.swing.JButton ButtonLeafeon;
    private javax.swing.JButton ButtonMewtwo;
    private javax.swing.JButton ButtonPikachu;
    private javax.swing.JButton ButtonSandshrew;
    private javax.swing.JButton ButtonSquirtle;
    private javax.swing.JButton ButtonVaporeon;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
